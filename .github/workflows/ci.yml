name: CI

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18, 20, 22]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install
        run: npm install --no-audit --no-fund
        shell: bash

      - name: Install expense dependencies
        run: cd expense && npm install
        shell: bash
        continue-on-error: true

      - name: Run expense tests with coverage
        run: cd expense && npm test -- --coverage --coverageReporters=lcov --coverageReporters=json-summary
        shell: bash
        continue-on-error: true

      - name: Install todo dependencies
        run: cd todo && npm install
        shell: bash
        continue-on-error: true

      - name: Run todo tests with coverage
        run: cd todo && npm test -- --coverage --coverageReporters=lcov --coverageReporters=json-summary
        shell: bash
        continue-on-error: true

      - name: Install stopwatch dependencies
        run: cd stopwatch && npm install
        shell: bash
        continue-on-error: true

      - name: Run stopwatch tests with coverage
        run: cd stopwatch && npm test -- --coverage --coverageReporters=lcov --coverageReporters=json-summary
        shell: bash
        continue-on-error: true

      - name: Install quote dependencies
        run: cd quote && npm install
        shell: bash
        continue-on-error: true

      - name: Run quote tests with coverage
        run: cd quote && npm test -- --coverage --coverageReporters=lcov --coverageReporters=json-summary
        shell: bash
        continue-on-error: true

      - name: Generate review.md
        shell: bash
        run: |
          echo "# CI Review Packet" > review.md
          echo "## Environment" >> review.md
          node -v >> review.md
          npm -v >> review.md
          echo "" >> review.md
          echo "## Test Results Summary" >> review.md
          echo "- Expense app: $([ -d "expense/coverage" ] && echo "coverage generated" || echo "no coverage")" >> review.md
          echo "- Todo app: $([ -d "todo/coverage" ] && echo "coverage generated" || echo "no coverage")" >> review.md
          echo "- Stopwatch app: $([ -d "stopwatch/coverage" ] && echo "coverage generated" || echo "no coverage")" >> review.md
          echo "- Quote app: $([ -d "quote/coverage" ] && echo "coverage generated" || echo "no coverage")" >> review.md
          echo "" >> review.md
          echo "## Commit Summary (last 10)" >> review.md
          git log -n 10 --pretty=format:'- %h %ad %an — %s' --date=short >> review.md || echo "Git log unavailable" >> review.md

      - name: Upload expense coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-expense-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            expense/coverage/coverage-summary.json
            expense/coverage/lcov-report/index.html

      - name: Upload todo coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-todo-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            todo/coverage/coverage-summary.json
            todo/coverage/lcov-report/index.html

      - name: Upload stopwatch coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-stopwatch-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            stopwatch/coverage/coverage-summary.json
            stopwatch/coverage/lcov-report/index.html

      - name: Upload quote coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-quote-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            quote/coverage/coverage-summary.json
            quote/coverage/lcov-report/index.html

      - name: Upload review.md
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: review-md-${{ matrix.os }}-node${{ matrix.node-version }}
          path: review.md

  package-artifacts:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all coverage artifacts
        uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts
          merge-multiple: true

      - name: Download review.md
        uses: actions/download-artifact@v4
        with:
          name: review-md-ubuntu-latest-node20
          path: downloaded-artifacts

      - name: Organize artifacts
        run: |
          mkdir -p review-packet/coverage-reports

          # Create directories for each app
          mkdir -p review-packet/coverage-reports/expense
          mkdir -p review-packet/coverage-reports/todo
          mkdir -p review-packet/coverage-reports/stopwatch
          mkdir -p review-packet/coverage-reports/quote

          # Copy coverage files from downloaded artifacts
          if [ -d "downloaded-artifacts" ]; then
            # Copy expense coverage
            if [ -f "downloaded-artifacts/expense/coverage/coverage-summary.json" ]; then
              cp downloaded-artifacts/expense/coverage/coverage-summary.json review-packet/coverage-reports/expense/ 2>/dev/null || true
            fi
            if [ -f "downloaded-artifacts/expense/coverage/lcov-report/index.html" ]; then
              cp downloaded-artifacts/expense/coverage/lcov-report/index.html review-packet/coverage-reports/expense/ 2>/dev/null || true
            fi

            # Copy todo coverage
            if [ -f "downloaded-artifacts/todo/coverage/coverage-summary.json" ]; then
              cp downloaded-artifacts/todo/coverage/coverage-summary.json review-packet/coverage-reports/todo/ 2>/dev/null || true
            fi
            if [ -f "downloaded-artifacts/todo/coverage/lcov-report/index.html" ]; then
              cp downloaded-artifacts/todo/coverage/lcov-report/index.html review-packet/coverage-reports/todo/ 2>/dev/null || true
            fi

            # Copy stopwatch coverage
            if [ -f "downloaded-artifacts/stopwatch/coverage/coverage-summary.json" ]; then
              cp downloaded-artifacts/stopwatch/coverage/coverage-summary.json review-packet/coverage-reports/stopwatch/ 2>/dev/null || true
            fi
            if [ -f "downloaded-artifacts/stopwatch/coverage/lcov-report/index.html" ]; then
              cp downloaded-artifacts/stopwatch/coverage/lcov-report/index.html review-packet/coverage-reports/stopwatch/ 2>/dev/null || true
            fi

            # Copy quote coverage
            if [ -f "downloaded-artifacts/quote/coverage/coverage-summary.json" ]; then
              cp downloaded-artifacts/quote/coverage/coverage-summary.json review-packet/coverage-reports/quote/ 2>/dev/null || true
            fi
            if [ -f "downloaded-artifacts/quote/coverage/lcov-report/index.html" ]; then
              cp downloaded-artifacts/quote/coverage/lcov-report/index.html review-packet/coverage-reports/quote/ 2>/dev/null || true
            fi
          fi

          # Copy review.md
          if [ -f "downloaded-artifacts/review.md" ]; then
            cp downloaded-artifacts/review.md review-packet/ 2>/dev/null || echo "# Review Packet" > review-packet/review.md
          else
            echo "# Review Packet" > review-packet/review.md
            echo "## Generated on $(date)" >> review-packet/review.md
            echo "" >> review-packet/review.md
            echo "## Coverage Reports" >> review-packet/review.md
            echo "- Expense app coverage: $([ -f "review-packet/coverage-reports/expense/coverage-summary.json" ] && echo "✓" || echo "✗")" >> review-packet/review.md
            echo "- Todo app coverage: $([ -f "review-packet/coverage-reports/todo/coverage-summary.json" ] && echo "✓" || echo "✗")" >> review-packet/review.md
            echo "- Stopwatch app coverage: $([ -f "review-packet/coverage-reports/stopwatch/coverage-summary.json" ] && echo "✓" || echo "✗")" >> review-packet/review.md
            echo "- Quote app coverage: $([ -f "review-packet/coverage-reports/quote/coverage-summary.json" ] && echo "✓" || echo "✗")" >> review-packet/review.md
          fi

      - name: Create review-packet.zip
        run: |
          cd review-packet
          zip -r ../review-packet.zip ./*
          cd ..
          ls -la review-packet.zip

      - name: Upload final review packet
        uses: actions/upload-artifact@v4
        with:
          name: review-packet
          path: review-packet.zip


