name: Mirror to Public Repo

# Prevent overlapping runs per ref
concurrency:
  group: mirror-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: read

env:
  # Set repository variable MIRROR_REPO_SLUG to the destination repo as 'owner/repo'
  MIRROR_REPO_SLUG: ${{ vars.MIRROR_REPO_SLUG }}

jobs:
  mirror:
    name: Push all refs to public mirror
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate configuration
        shell: bash
        run: |
          if [ -z "${MIRROR_REPO_SLUG}" ]; then
            echo "ERROR: Repository variable MIRROR_REPO_SLUG is not set."
            echo "Please set vars.MIRROR_REPO_SLUG to 'owner/public-repo' in repository Settings â†’ Variables." >&2
            exit 1
          fi
          if [ -z "${{ secrets.MIRROR_PAT }}" ]; then
            echo "ERROR: Secret MIRROR_PAT is not set." >&2
            exit 1
          fi

      - name: Configure git
        shell: bash
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add mirror remote
        shell: bash
        run: |
          set -euo pipefail
          MIRROR_URL="https://x-access-token:${{ secrets.MIRROR_PAT }}@github.com/${MIRROR_REPO_SLUG}.git"
          git remote remove mirror 2>/dev/null || true
          git remote add mirror "$MIRROR_URL"
          git remote -v

      - name: Mirror push (branches and tags)
        shell: bash
        run: |
          set -euo pipefail
          git fetch --prune origin
          git push --prune --mirror mirror

name: mirror

on:
  push:
    branches: ["**"]
    tags: ["*"]
  workflow_dispatch:

concurrency:
  group: mirror-${{ github.ref }}
  cancel-in-progress: true

jobs:
  mirror:
    name: mirror
    runs-on: ubuntu-latest
    steps:
      - name: Check secret present
        shell: bash
        env:
          MIRROR_URL: ${{ secrets.MIRROR_URL || 'https://github.com/Maximus-Technologies-Uganda/maximus-training-patrick-mirror.git' }}
          MIRROR_PAT: ${{ secrets.MIRROR_PAT || secrets.MIRROR_TOKEN }}
        run: |
          set -euo pipefail
          if [[ -z "${MIRROR_PAT}" ]]; then
            echo "ERROR: MIRROR_PAT (or MIRROR_TOKEN) is missing." >&2
            exit 1
          fi
          echo "Using MIRROR_URL=${MIRROR_URL}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Add public mirror remote
        env:
          MIRROR_URL: ${{ secrets.MIRROR_URL || 'https://github.com/Maximus-Technologies-Uganda/maximus-training-patrick-mirror.git' }}
          MIRROR_PAT: ${{ secrets.MIRROR_PAT || secrets.MIRROR_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          if [[ -z "${MIRROR_URL}" ]]; then
            echo "MIRROR_URL is empty" >&2; exit 1
          fi
          if [[ "${MIRROR_URL}" =~ ^git@ ]]; then
            echo "Using SSH mirror URL"
            git remote add mirror "${MIRROR_URL}"
          else
            echo "Using HTTPS mirror URL with token"
            url_no_proto="${MIRROR_URL#https://}"
            url_no_proto="${url_no_proto#http://}"
            git remote add mirror "https://x-access-token:${MIRROR_PAT}@${url_no_proto}"
          fi
          git remote -v

      - name: Fetch all branches and tags from origin
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          set -euo pipefail
          # Authenticate fetch against private origin using GITHUB_TOKEN (does not persist credentials)
          git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git fetch --prune origin +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
          # Restore clean origin URL
          git remote set-url origin "https://github.com/${GITHUB_REPOSITORY}.git"

      - name: Push all branches and tags to mirror
        shell: bash
        run: |
          set -euo pipefail
          # Push all branches from remote-tracking refs and all tags
          git push --force --prune mirror +refs/remotes/origin/*:refs/heads/*
          git push --force --prune mirror +refs/tags/*:refs/tags/*


