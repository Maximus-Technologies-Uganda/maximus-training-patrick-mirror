name: Submit Full Deploy to Cloud Build

on:
  workflow_run:
    workflows: ['Quality Gate']
    types: [completed]
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: proj-app-dev
  REGION: africa-south1
  AR_REPOSITORY: cloud-run-images
  SERVICE_NAME: maximus-training-frontend
  WORKLOAD_IDENTITY_PROVIDER: projects/673209018655/locations/global/workloadIdentityPools/github-pool/providers/github-provider
  PROD_API_SECRET_NAME: prod-api-url

jobs:
  submit-build:
    name: Submit Cloud Build Job
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    concurrency:
      group: frontend-cloudbuild-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: github-actions-deployer@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
          token_format: access_token
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Verify Artifact Registry permissions
        run: |
          set -euo pipefail
          SA="github-actions-deployer@${{ env.PROJECT_ID }}.iam.gserviceaccount.com"
          REPO="${{ env.AR_REPOSITORY }}"
          REGION="${{ env.REGION }}"
          PROJECT="${{ env.PROJECT_ID }}"
          echo "Checking Artifact Registry repo '${REPO}' in '${REGION}' for SA '${SA}'"
          gcloud artifacts repositories describe "${REPO}" --location="${REGION}" --project="${PROJECT}"
          ACCESS_TOKEN=$(gcloud auth print-access-token --impersonate-service-account="${SA}")
          RESOURCE="projects/${PROJECT}/locations/${REGION}/repositories/${REPO}"
          RESP=$(curl -s -X POST \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            -H "Content-Type: application/json" \
            -d '{"permissions":["artifactregistry.repositories.uploadArtifacts"]}' \
            "https://artifactregistry.googleapis.com/v1/${RESOURCE}:testIamPermissions")
          echo "$RESP"
          if echo "$RESP" | grep -q 'artifactregistry.repositories.uploadArtifacts'; then
            echo "Service account has uploadArtifacts permission"
          else
            echo "Service account lacks uploadArtifacts permission on ${REPO}" >&2
            exit 1
          fi

      - name: Submit Cloud Build (full deploy)
        id: submit_build
        run: |
          set -euo pipefail
          BUILD_OUTPUT=$(gcloud builds submit \
            --config=cloudbuild.yaml \
            --project="${{ env.PROJECT_ID }}" \
            --region="${{ env.REGION }}" \
            --service-account="projects/${{ env.PROJECT_ID }}/serviceAccounts/github-actions-deployer@${{ env.PROJECT_ID }}.iam.gserviceaccount.com" \
            --substitutions=_REGION=${{ env.REGION }},_AR_REPOSITORY=${{ env.AR_REPOSITORY }},_FRONTEND_SERVICE_NAME=${{ env.SERVICE_NAME }},_API_SERVICE_NAME=maximus-training-api \
            . 2>&1)
          echo "$BUILD_OUTPUT"

          # Extract build ID from the output
          BUILD_ID=$(echo "$BUILD_OUTPUT" | grep -oP 'ID:\s+\K[a-zA-Z0-9-]+' | head -1 || echo "")
          if [ -n "$BUILD_ID" ]; then
            echo "build_id=$BUILD_ID" >> "$GITHUB_OUTPUT"
          fi

      - name: Write deployment summary to Job Summary
        run: |
          set -euo pipefail
          SERVICE_URL=$(gcloud run services describe "${{ env.SERVICE_NAME }}" --project "${{ env.PROJECT_ID }}" --region "${{ env.REGION }}" --format='value(status.url)')
          API_URL=$(gcloud run services describe maximus-training-api --project "${{ env.PROJECT_ID }}" --region "${{ env.REGION }}" --format='value(status.url)' || echo "N/A")

          if [ -z "$SERVICE_URL" ]; then
            echo "Failed to resolve Cloud Run service URL" >&2
            exit 1
          fi

          BUILD_ID="${{ steps.submit_build.outputs.build_id }}"
          BUILD_LINK="https://console.cloud.google.com/cloud-build/builds;region=${{ env.REGION }}/${BUILD_ID}?project=${{ env.PROJECT_ID }}"

          {
            echo "## Cloud Run Deployment"
            echo ""
            echo "### Build Information"
            echo "- **Commit SHA:** \`${{ github.sha }}\`"
            echo "- **Branch:** \`${{ github.ref_name }}\`"
            if [ -n "$BUILD_ID" ]; then
              echo "- **Cloud Build:** [View Build Log]($BUILD_LINK)"
            fi
            echo ""
            echo "### Deployed Services"
            echo "- **Frontend Service:** ${{ env.SERVICE_NAME }}"
            echo "  - URL: $SERVICE_URL"
            echo "- **API Service:** maximus-training-api"
            echo "  - URL: $API_URL"
            echo "- **Region:** ${{ env.REGION }}"
          } >> "$GITHUB_STEP_SUMMARY"
