openapi: 3.0.3
info:
  title: Auth, Ownership, and Observability API
  version: 0.1.0
components:
  securitySchemes:
    sessionCookie:
      type: apiKey
      in: cookie
      name: session
  schemas:
    Error:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
        message:
          type: string
paths:
  /health:
    get:
      summary: Readiness probe
      responses:
        '200':
          description: Ready
  /login:
    post:
      summary: Username/password login
      responses:
        '204':
          description: Session cookie issued
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /logout:
    post:
      summary: Logout (idempotent)
      responses:
        '204':
          description: Session cleared
  /posts:
    get:
      summary: List posts (public)
      responses:
        '200':
          description: OK
    post:
      summary: Create post (owner enforced)
      security:
        - sessionCookie: []
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /posts/{id}:
    get:
      summary: Get post (public)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update post (owner enforced)
      security:
        - sessionCookie: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete post (owner enforced)
      security:
        - sessionCookie: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
