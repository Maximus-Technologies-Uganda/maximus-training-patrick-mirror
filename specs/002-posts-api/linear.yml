parentIssueId: "2d488fc5-f090-43d5-bf29-3f496fe1b631"
tasks:
  - title: "Initialize `api/src` substructure: `controllers/`, `services/`, `repositories/`, `middleware/`, `routes/`, `tests/`."
    issueId: "53697079-d141-4fbe-a798-0f95689e116c"
  - title: "Create an app factory `createApp(config, repository)` that wires middleware, routes, and error handling."
    issueId: "150e16b1-19fe-426b-8d4e-deca352b1198"
  - title: "Add a small config module to read env (RATE_LIMIT_WINDOW_MS, RATE_LIMIT_MAX, JSON_LIMIT)."
    issueId: "02de499f-50ca-45a5-a3b1-5d93cec2d046"
  - title: "Define `PostsRepository` interface: `create`, `getById`, `list(page, pageSize)`, `replace`, `update`, `delete`, `count`."
    issueId: "b89ccc44-912c-4487-bf28-31ae5c4ef9fd"
  - title: "Implement `InMemoryPostsRepository` using `Map` with sorting by `createdAt`."
    issueId: "5d29f1b0-64fc-4699-83ee-da4396173a8e"
  - title: "Add repository factory that returns in-memory by default; export for test injection."
    issueId: "2edb2335-b728-4dca-b58d-5fb86dcc5f0b"
  - title: "Implement `PostsService` that depends on `PostsRepository`:"
    issueId: "8350adf3-1133-43ea-8f51-2b357dff2283"
  - title: "`create(data)` sets defaults, ids, timestamps; returns created."
    issueId: "12ab33f0-d5ee-471b-8ff6-c1dd0b91201e"
  - title: "`getById(id)` returns post or domain not-found error."
    issueId: "d9c95dc7-da01-42e8-a92c-500aa951c56c"
  - title: "`list(page, pageSize)` enforces bounds; returns items + `hasNextPage`."
    issueId: "b98bbb5e-47aa-4896-b93b-5985da36848b"
  - title: "`replace(id, data)` validates existence; preserves `id` and `createdAt`; updates `updatedAt`."
    issueId: "d7166798-dc2a-4496-b4b4-13342c10c024"
  - title: "`update(id, partial)` merges allowed fields; updates `updatedAt`."
    issueId: "c0b418b6-7b90-48a5-9153-213ae1eb13b1"
  - title: "`delete(id)` deletes or returns not-found."
    issueId: "687f9b8c-b08e-4275-b109-5398ffcaecac"
  - title: "Create Zod schemas: `PostCreate`, `PostUpdate` (partial + at least one field), and query schema for `page`/`pageSize`."
    issueId: "13d4fa7f-b2f4-4b2e-b073-b85939ba2817"
  - title: "Export validation helpers for controllers to invoke and format errors."
    issueId: "a3f4c914-38ad-468e-839c-496d82ae3af4"
  - title: "Implement controllers mapping HTTP ↔ service results; set status codes/headers:"
    issueId: "e8a8dfb7-7814-4fd6-a5fa-357e0af977b2"
  - title: "`GET /health` → 200 `{ status: 'ok' }`."
    issueId: "d68864d7-e38a-477f-90ab-917b6e44eafa"
  - title: "`GET /posts` → 200 list with pagination metadata."
    issueId: "72633bb3-c5c0-4471-a50e-26b692510d0f"
  - title: "`POST /posts` → 201 with `Location` header."
    issueId: "e5179327-bf03-4c6c-924a-dd3545b699fd"
  - title: "`GET /posts/:id` → 200 or 404."
    issueId: "84b99b2d-8d2b-4019-9cc0-28b1d872be09"
  - title: "`PUT /posts/:id` → 200 or 400/404."
    issueId: "32640f32-587d-4602-8043-b8589cc28116"
  - title: "`PATCH /posts/:id` → 200 or 400/404."
    issueId: "99a0e465-70f1-40ed-ab3e-69312eb7e7fb"
  - title: "`DELETE /posts/:id` → 204 or 404."
    issueId: "b533953d-b1ef-4a54-9197-e5310fe8d136"
  - title: "Create route modules that attach validators and bind controllers."
    issueId: "ea599640-a889-463c-865a-f262db6286a7"
  - title: "Wire `helmet`, `express.json({ limit })`, `morgan`."
    issueId: "9d9228e2-8112-42d5-ba55-f0583cce2b2b"
  - title: "Configure global IP rate limiting via `express-rate-limit` using env config; include standard headers."
    issueId: "6e380cf3-dc01-4b76-8fca-fdb57e50a748"
  - title: "Implement central error handler mapping `{ code }` → HTTP status and envelope `{ code, message, details? }`."
    issueId: "62042d39-2f1d-4e23-b8b5-ca9bc939e51a"
  - title: "Verify/update `api/openapi.json` to reflect limits and schemas (strict, no additional properties)."
    issueId: "2e1648cf-ebbd-4b86-809c-0470d227c207"
  - title: "Optionally expose `/openapi.json` in dev; ensure file in repo is source of truth."
    issueId: "89b3e5e7-e96e-46a9-be9e-c0b5332a5f15"
  - title: "Services: all operations, timestamps, defaults, and merge behavior."
    issueId: "4eca1e98-7983-4341-ae85-320f5241e76b"
  - title: "Pagination calculations and ordering."
    issueId: "90224d07-fdd0-434d-a144-adcf3387d7da"
  - title: "Repository (in-memory): CRUD and edge cases (missing ids, empty sets)."
    issueId: "2a52f816-bc4f-444a-8d3f-d8395a1a27d6"
  - title: "Validation: bodies, query params, unknown-field rejection, PATCH empty payload."
    issueId: "52d5d06a-6fb1-49ce-8c21-418d2aca97bb"
  - title: "Error mapping: domain → HTTP status and envelope."
    issueId: "f2a423e5-54d1-47e7-ad5b-01c455be3063"
  - title: "Boot app with in-memory repository. Test each route end-to-end (status, headers, body)."
    issueId: "d0ec540b-f6b7-4e7a-bf90-25900e36ce2b"
  - title: "`POST /posts` success and validation failures."
    issueId: "f3c6191f-61a3-47a6-b2d6-8818fc2ba741"
  - title: "`GET /posts` pagination behavior and bounds."
    issueId: "9b94ee1d-6816-4e6e-86a2-6b41e0847f97"
  - title: "`GET /posts/:id` 200/404."
    issueId: "521fac09-5767-4e6b-bfd5-6d6b6a5091ed"
  - title: "`PUT` and `PATCH` success and 400/404 paths."
    issueId: "db66a1c4-f6e9-4b20-b137-567148135e40"
  - title: "`DELETE` 204 and 404."
    issueId: "dd438987-d37c-48eb-97e5-8d69775e8070"
  - title: "Rate limiting: set tiny limits; assert 429 with headers and error envelope."
    issueId: "6b7cfd1b-e18c-4f4c-b83a-7f2ef4cafafb"
  - title: "`GET /health` returns 200 status payload."
    issueId: "0745ab88-6fe3-4b7f-9231-c460d511b0b5"
  - title: "Load `api/openapi.json` and register with `jest-openapi`."
    issueId: "00db7a35-273d-4758-964e-43ab79e5c957"
  - title: "For each route, assert response bodies and required headers match the OpenAPI schemas."
    issueId: "b1a58e90-7102-43b0-85f6-cf42fc78f0f8"
  - title: "Add a spec validation test that lints the OpenAPI document against the OpenAPI 3.1 meta-schema."
    issueId: "c7e75907-52e4-4ed9-b896-8d8e5d33e400"
  - title: "Add npm scripts for `dev`, `start`, `test`, and `test:watch` in `api/package.json` if missing."
    issueId: "dcdf24e5-a190-4c61-9274-21e654a02a8b"
  - title: "Document quickstart in `specs/002-posts-api/quickstart.md` (optional for this phase)."
    issueId: "5fb00161-50f8-47da-a40e-40edb81323b2"
  - title: "Cross-check acceptance scenarios from the spec against tests; ensure coverage for all."
    issueId: "28066f52-a439-4718-a469-b027d82ca5de"
  - title: "Ensure consistent error envelope across 4xx/5xx."
    issueId: "5c094416-b1f2-4931-9da3-d53b78a75915"
  - title: "Confirm unknown fields rejected; PATCH requires at least one field."
    issueId: "1928a951-2905-4c4f-8db8-5869e7d49c72"
  - title: "Confirm OpenAPI doc is committed and tests pass."
    issueId: "2bf404d5-ffa0-4d05-a65f-34dbe82b1a2e"
